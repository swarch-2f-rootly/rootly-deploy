# Rootly Platform - Integration Tests Docker Compose
# This docker-compose file is specifically for running integration tests
services:
  # InfluxDB - Test Time Series Database
  influxdb-test:
    image: influxdb:2.7.5
    container_name: rootly-influxdb-test
    restart: no
    ports:
      - "8186:8086"
    volumes:
      - influxdb_test_data:/var/lib/influxdb2
      - ./influxdb/init:/docker-entrypoint-initdb.d
    env_file:
      - .env.test
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=${DOCKER_INFLUXDB_INIT_MODE:-setup}
      - DOCKER_INFLUXDB_INIT_USERNAME=${DOCKER_INFLUXDB_INIT_USERNAME:-admin}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${DOCKER_INFLUXDB_INIT_PASSWORD:-admin123}
      - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG:-rootly-test}
      - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET:-agricultural_data_test}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN:-test-super-secret-influx-token}
    networks:
      - rootly-test-network
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # MinIO - Test Object Storage
  minio-test:
    image: minio/minio:latest
    container_name: rootly-minio-test
    restart: unless-stopped
    ports:
      - "9100:9000"
      - "9101:9001"
    volumes:
      - minio_test_data:/data
    env_file:
      - .env.test
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-admin123}
    command: server /data --console-address ":9101"
    networks:
      - rootly-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 10s
      retries: 3

  # Data Management Backend - Test Application Service
  data-management-backend-test:
    build:
      context: ../rootly-data-management-backend
      dockerfile: Dockerfile
    container_name: rootly-data-management-backend-test
    restart: no
    ports:
      - "8102:8000"
    depends_on:
      influxdb-test:
        condition: service_healthy
      minio-test:
        condition: service_healthy
    networks:
      - rootly-test-network
    env_file:
      - .env.test
    environment:
      - HOST_IP=${HOST_IP:-host.docker.internal}
      - EXTERNAL_PORT=8102
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Integration Tests Runner
  integration-tests:
    build:
      context: ../rootly-data-management-backend
      dockerfile: Dockerfile.test
    container_name: rootly-integration-tests
    restart: no
    depends_on:
      data-management-backend-test:
        condition: service_healthy
    networks:
      - rootly-test-network
    env_file:
      - .env.test
    environment:
      - RUN_INTEGRATION_TESTS=true
    working_dir: /app
    command: >
      sh -c "
        echo 'Waiting for application to be fully ready...' &&
        sleep 10 &&
        echo 'Testing connectivity to application...' &&
        curl -f http://data-management-backend-test:8000/health || (echo 'Application not ready, waiting...' && sleep 10) &&
        curl -f http://data-management-backend-test:8000/health &&
        echo 'Application is ready. Running integration tests...' &&
        go test -v ./tests/integration/... -run TestIntegrationTestSuite
      "
    profiles:
      - tests

# ============================================================================
# VOLUMES
# ============================================================================

volumes:
  influxdb_test_data:
    driver: local
  minio_test_data:
    driver: local

# ============================================================================
# NETWORKS
# ============================================================================

networks:
  rootly-test-network:
    driver: bridge
    name: rootly-test-network
